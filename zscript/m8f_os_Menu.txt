class m8f_os_SearchField : OptionMenuItemTextField
{

  // public: ///////////////////////////////////////////////////////////////////

  m8f_os_SearchField Init(String label, m8f_os_Menu menu)
  {
    Super.Init(label, "");
    mCVar = CVar.GetCVar("m8f_os_query");
    mMenu = menu;

    return self;
  }

  // public: ///////////////////////////////////////////////////////////////////

  override bool MenuEvent(int mkey, bool fromcontroller)
  {
    if (mkey == Menu.MKEY_Input)
    {
      mMenu.search(mEnter.GetText());
    }

    return Super.MenuEvent(mkey, fromcontroller);
  }

  // private: //////////////////////////////////////////////////////////////////

  m8f_os_Menu mMenu;

} // class m8f_os_SearchField

class m8f_os_Menu : OptionMenu
{

  // public: ///////////////////////////////////////////////////////////////////

  override void Init(Menu parent, OptionMenuDescriptor desc)
  {
    Super.Init(parent, desc);

    CVar.GetCVar("m8f_os_query").SetString("");

    mDesc.mItems.clear();

    addSearchField();

    mDesc.mScrollPos    = 0;
    mDesc.mSelectedItem = 0;
    mDesc.CalcIndent();
  }

  // public: ///////////////////////////////////////////////////////////////////

  void search(string query)
  {
    mDesc.mItems.clear();

    addSearchField();

    string path  = StringTable.Localize("$OPTMNU_TITLE");

    listOptions("OptionsMenu", query, path);

    mDesc.CalcIndent();
  }

  // private: //////////////////////////////////////////////////////////////////

  private m8f_os_SearchField addSearchField()
  {
    let searchField = new("m8f_os_SearchField").Init(searchLabel, self);

    mDesc.mItems.push(searchField);
    addEmptyLine(mDesc);

    return searchField;
  }

  private void listOptions(string menuName, string query, string path)
  {
    let desc = OptionMenuDescriptor(MenuDescriptor.GetDescriptor(menuName));
    if (desc == null)  { return; }
    if (desc == mDesc) { return; }

    int  nItems = desc.mItems.size();
    bool first  = true;

    for (int i = 0; i < nItems; ++i)
    {
      let item = desc.mItems[i];

      if (item is "OptionMenuItemStaticText") { continue; }

      string label = StringTable.Localize(item.mLabel);

      if (contains(label, query))
      {
        if (first)
        {
          addEmptyLine(mDesc);
          mDesc.mItems.push(makePathItem(path));
          first = false;
        }

        let itemOptionBase = OptionMenuItemOptionBase(item);
        if (itemOptionBase)
        {
          itemOptionBase.mCenter = false;
        }

        mDesc.mItems.push(item);
      }
    }

    for (int i = 0; i < nItems; ++i)
    {
      let    item  = desc.mItems[i];
      string label = StringTable.Localize(item.mLabel);

      if (label == optionSearchTitle) { continue; }

      if (item is "OptionMenuItemSubMenu")
      {
        string newPath = String.Format("%s/%s", path, label);
        listOptions(item.GetAction(), query, newPath);
      }
    }
  }

  private static OptionMenuItem makePathItem(string path)
  {
    OptionMenuItemStaticText text = new("OptionMenuItemStaticText").Init(path, 1);

    return text;
  }

  private static void addEmptyLine(OptionMenuDescriptor desc)
  {
    int nItems = desc.mItems.size();
    if (nItems > 0)
    {
      let staticText = OptionMenuItemStaticText(desc.mItems[nItems - 1]);
      if (staticText != null && staticText.mLabel == "") { return; }
    }

    let item = new("OptionMenuItemStaticText").Init("");
    desc.mItems.push(item);
  }

  private bool contains(string str, string substr)
  {
    str   .toLower();
    substr.toLower();

    bool contains = (str.IndexOf(substr) != -1);

    return contains;
  }

  const searchLabel       = "Search:";
  const optionSearchTitle = "Option Search";

} // m8f_os_Menu
